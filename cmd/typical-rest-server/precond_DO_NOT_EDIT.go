package main

// Autogenerated by Typical-Go. DO NOT EDIT.

import (
	"github.com/typical-go/typical-go/pkg/typgo"
	"github.com/typical-go/typical-rest-server/internal/app/infra"
	"github.com/typical-go/typical-rest-server/internal/server/repository"
	"github.com/typical-go/typical-rest-server/internal/server/service"
	"github.com/typical-go/typical-rest-server/pkg/typpg"
)

func init() {
	typgo.Provide(
		&typgo.Constructor{Name: "", Fn: infra.Connect},
		&typgo.Constructor{Name: "", Fn: repository.NewBookRepo},
		&typgo.Constructor{Name: "", Fn: service.NewBookSvc},
		&typgo.Constructor{
			Name: "",
			Fn: func() (cfg *infra.App, err error) {
				cfg = new(infra.App)
				if err = typgo.ProcessConfig("APP", cfg); err != nil {
					return nil, err
				}
				return
			},
		},
		&typgo.Constructor{
			Name: "",
			Fn: func() (cfg *infra.Redis, err error) {
				cfg = new(infra.Redis)
				if err = typgo.ProcessConfig("REDIS", cfg); err != nil {
					return nil, err
				}
				return
			},
		},
		&typgo.Constructor{
			Name: "",
			Fn: func() (cfg *typpg.Config, err error) {
				cfg = new(typpg.Config)
				if err = typgo.ProcessConfig("PG", cfg); err != nil {
					return nil, err
				}
				return
			},
		},
	)
	typgo.Destroy(
		&typgo.Destructor{Fn: infra.Disconnect},
	)
}
